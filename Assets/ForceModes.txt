   - ForceMode -                                           - same as -
———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
VelocityChange  <per frame>   [m/s]        instant change      velocity += Vector3.forward  (increases force m/s every frame)
Impulse         <per frame>   [m/s]        instant change      velocity += Vector3.forward / mass

Acceleration    <per second>  [m/s² = N]   accumulative        velocity += Vector3.forward * fixedDeltaTime
Force           <per second>  [m/s² = N]   accumulative        velocity += Vector3.forward * fixedDeltaTime / mass
———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

float GetFinalVelocity(float aVelocityChange, float aDrag)
{
    return aVelocityChange * (1 / Mathf.Clamp01(aDrag * Time.fixedDeltaTime) - 1);
}

float GetFinalVelocityFromAcceleration(float aAcceleration, float aDrag)
{
    return GetFinalVelocity(aAcceleration * Time.fixedDeltaTime, aDrag);
}

float GetDrag(float aVelocityChange, float aFinalVelocity)
{
    return aVelocityChange / ((aFinalVelocity + aVelocityChange) * Time.fixedDeltaTime);
}

float GetDragFromAcceleration(float aAcceleration, float aFinalVelocity)
{
    return GetDrag(aAcceleration * Time.fixedDeltaTime, aFinalVelocity);
}

float GetRequiredVelocityChange(float aFinalSpeed, float aDrag)
{
    float m = Mathf.Clamp01(aDrag * Time.fixedDeltaTime);
    return aFinalSpeed * m / (1 - m);
}

float GetRequiredAcceleraton(float aFinalSpeed, float aDrag)
{
    return GetRequiredVelocityChange(aFinalSpeed, aDrag) / Time.fixedDeltaTime;
}

https://discussions.unity.com/t/trying-to-understand-rigidbody-forcemode-derivation/118383/3